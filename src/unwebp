#!/usr/bin/env bash
#
# unwebp -- convert webp to jpg/png
#
# Copyright 2020 Aron Griffis <aron@arongriffis.com>
#
# Permission is hereby granted, free of charge, to any person obtaining
# a copy of this software and associated documentation files (the
# "Software"), to deal in the Software without restriction, including
# without limitation the rights to use, copy, modify, merge, publish,
# distribute, sublicense, and/or sell copies of the Software, and to
# permit persons to whom the Software is furnished to do so, subject to
# the following conditions:
#
# The above copyright notice and this permission notice shall be included
# in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
# OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
# IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
# CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
# TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
# SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
#===============================================================================

unwebp() {
    unset ${!opt_*} ${!opt_*} # twice for vars and functions

    declare cmd=${BASH_SOURCE##*/}
    declare ext=
    declare opt_delete=false
    declare opt_force=false
    declare opt_recursive=false
    declare shortopts=( r:recursive )

    ghettopt "$@" || exit
    set -- "${params[@]}"

    [[ $# -gt 0 ]] || die "need some files to work on"

    # This only affects globs internally in the script, since globs on the
    # command-line have already been expanded.
    shopt -s globstar nullglob nocaseglob

    declare f status=0
    for f; do
        if [[ -d $f ]]; then
            if $opt_recursive; then
                process_all "$f"/**/*.webp || status=$?
            else
                warn "can't process dir without --recursive: $f"
                status=1
            fi
        else
            process "$f" || status=$?
        fi
    done

    exit $status
}

process_all() {
    declare f status
    for f; do
        process "$f" || status=$?
    done
    return $status
}

process() {
    declare f="$1" o info

    [[ -n $ext ]] || info=$(webpinfo "$f") || return

    if [[ ${ext:-png} == png && ( $info == *'Alpha: 1'* || $info == *'Format: Lossless'* ) ]]; then
        o=${f%.*}.png
    else
        o=${f%.*}.jpg
    fi

    if [[ -e $o ]]; then
        if $opt_force; then
            warn "overwriting existing: $o"
        else
            warn "skipping existing: $o"
            return 0
        fi
    fi

    declare png_tmp o_tmp status=0

    o_tmp=$(mktemp -t "webp-autoconvert.XXXXXX.${o##*.}") || die "failed to create temporary file"

    if [[ $o == *.png ]]; then
        dwebp -mt -o "$o_tmp" "$f" && mv -vf "$o_tmp" "$o" || status=$?
    else
        png_tmp=$(mktemp -t "webp-autoconvert.XXXXXX.png") || die "failed to create temporary file"
        dwebp -mt -o "$png_tmp" "$f" && \
            convert "$png_tmp" "$o_tmp" && \
            mv -vf "$o_tmp" "$o" || status=$?
    fi

    if [[ $status == 0 ]] && $opt_delete; then
        rm -f "$f"
    fi

    rm -f "$o_tmp" "$png_tmp"

    return $status
}

opt_help() {
    echo "usage: $cmd [options] files..."
    echo
    echo "     --delete     Delete original after conversion"
    echo "     --force      Replace existing output file"
    echo "     --jpg        Lossy output (override autodetection)"
    echo "     --png        Lossless output (override autodetection)"
    echo "  -r --recursive  Operate on directories recursively"
    exit 0
}

opt_version() {
    echo "$cmd version 1.0"
    exit 0
}

opt_jpg() {
    ext=jpg
}

opt_png() {
    ext=png
}

die() {
    echo "ERROR: $*" >&2
    exit 1
}

warn() {
    echo "WARNING: $*" >&2
}
